with open("puzzle_input.txt", "r") as fil:
    bags = [bag.rstrip() for bag in fil.readlines()]


def split_string_in_half(string):
    fh, sh = string[: len(string) // 2], string[len(string) // 2 :]
    return [fh, sh]


def get_ordinal(string):
    return ord(string) - 96 if ord(string) > 96 else ord(string) - 38


## Each compartment is generated by splitting each bag in half
comps = list(map(split_string_in_half, bags))

common_items_priority = 0
for comp in comps:
    common_item = set.intersection(*map(set, comp))
    common_item_char = common_item.pop()  # returns and remove the first el.
    common_items_priority = common_items_priority + get_ordinal(common_item_char)

# We are splitting the list of bags in a list of trios of bags
bag_trios = zip(*(iter(bags),) * 3)
badge_priorities = 0

for trio in bag_trios:
    ## Get the common character in a list (set) of bags
    common_char = set.intersection(*map(set, trio))
    badge_priorities = badge_priorities + get_ordinal(common_char.pop())


print(f"Part 1 answer is {common_items_priority}")
print(f"Part 2 answer is {badge_priorities}")
